/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface FilterBar {
        "results": any;
    }
    interface GardenerDetail {
        "record": any;
    }
    interface GardenerResults {
        "results": any;
    }
    interface GardenerSearch {
        "api": string;
    }
    interface LoadingSpinner {
    }
    interface PrintErrors {
        "errors": any;
    }
    interface ResultsPagination {
        "currentPage": number;
        "pages": number;
    }
}
declare global {
    interface HTMLFilterBarElement extends Components.FilterBar, HTMLStencilElement {
    }
    var HTMLFilterBarElement: {
        prototype: HTMLFilterBarElement;
        new (): HTMLFilterBarElement;
    };
    interface HTMLGardenerDetailElement extends Components.GardenerDetail, HTMLStencilElement {
    }
    var HTMLGardenerDetailElement: {
        prototype: HTMLGardenerDetailElement;
        new (): HTMLGardenerDetailElement;
    };
    interface HTMLGardenerResultsElement extends Components.GardenerResults, HTMLStencilElement {
    }
    var HTMLGardenerResultsElement: {
        prototype: HTMLGardenerResultsElement;
        new (): HTMLGardenerResultsElement;
    };
    interface HTMLGardenerSearchElement extends Components.GardenerSearch, HTMLStencilElement {
    }
    var HTMLGardenerSearchElement: {
        prototype: HTMLGardenerSearchElement;
        new (): HTMLGardenerSearchElement;
    };
    interface HTMLLoadingSpinnerElement extends Components.LoadingSpinner, HTMLStencilElement {
    }
    var HTMLLoadingSpinnerElement: {
        prototype: HTMLLoadingSpinnerElement;
        new (): HTMLLoadingSpinnerElement;
    };
    interface HTMLPrintErrorsElement extends Components.PrintErrors, HTMLStencilElement {
    }
    var HTMLPrintErrorsElement: {
        prototype: HTMLPrintErrorsElement;
        new (): HTMLPrintErrorsElement;
    };
    interface HTMLResultsPaginationElement extends Components.ResultsPagination, HTMLStencilElement {
    }
    var HTMLResultsPaginationElement: {
        prototype: HTMLResultsPaginationElement;
        new (): HTMLResultsPaginationElement;
    };
    interface HTMLElementTagNameMap {
        "filter-bar": HTMLFilterBarElement;
        "gardener-detail": HTMLGardenerDetailElement;
        "gardener-results": HTMLGardenerResultsElement;
        "gardener-search": HTMLGardenerSearchElement;
        "loading-spinner": HTMLLoadingSpinnerElement;
        "print-errors": HTMLPrintErrorsElement;
        "results-pagination": HTMLResultsPaginationElement;
    }
}
declare namespace LocalJSX {
    interface FilterBar {
        "onFilterEvent"?: (event: CustomEvent<any>) => void;
        "onRecordSelected"?: (event: CustomEvent<CustomEvent>) => void;
        "results"?: any;
    }
    interface GardenerDetail {
        "onRecordSelected"?: (event: CustomEvent<CustomEvent>) => void;
        "record"?: any;
    }
    interface GardenerResults {
        "onRecordSelected"?: (event: CustomEvent<CustomEvent>) => void;
        "results"?: any;
    }
    interface GardenerSearch {
        "api"?: string;
    }
    interface LoadingSpinner {
    }
    interface PrintErrors {
        "errors"?: any;
    }
    interface ResultsPagination {
        "currentPage"?: number;
        "onPageSelected"?: (event: CustomEvent<any>) => void;
        "pages"?: number;
    }
    interface IntrinsicElements {
        "filter-bar": FilterBar;
        "gardener-detail": GardenerDetail;
        "gardener-results": GardenerResults;
        "gardener-search": GardenerSearch;
        "loading-spinner": LoadingSpinner;
        "print-errors": PrintErrors;
        "results-pagination": ResultsPagination;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "filter-bar": LocalJSX.FilterBar & JSXBase.HTMLAttributes<HTMLFilterBarElement>;
            "gardener-detail": LocalJSX.GardenerDetail & JSXBase.HTMLAttributes<HTMLGardenerDetailElement>;
            "gardener-results": LocalJSX.GardenerResults & JSXBase.HTMLAttributes<HTMLGardenerResultsElement>;
            "gardener-search": LocalJSX.GardenerSearch & JSXBase.HTMLAttributes<HTMLGardenerSearchElement>;
            "loading-spinner": LocalJSX.LoadingSpinner & JSXBase.HTMLAttributes<HTMLLoadingSpinnerElement>;
            "print-errors": LocalJSX.PrintErrors & JSXBase.HTMLAttributes<HTMLPrintErrorsElement>;
            "results-pagination": LocalJSX.ResultsPagination & JSXBase.HTMLAttributes<HTMLResultsPaginationElement>;
        }
    }
}
